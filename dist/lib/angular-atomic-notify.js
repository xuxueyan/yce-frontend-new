"use strict";angular.module("atomic-notify",[]).config(["$provide",function(t){t.provider("atomicNotify",function(){var t={delay:0,useicon:!0};this.setDefaultDelay=function(i){t.delay=i},this.useIconOnNotification=function(i){t.useicon=i},this.$get=function(){return t}})}]).service("atomicNotifyService",["atomicNotify",function(t){var i={},n=function(){return angular.element("ng-atomic-notify").isolateScope()},e=function(i,e){n().addItem({type:i.type,icon:!!t.useicon&&i.icon,text:i.text},e||t.delay)};return i.success=function(t,i){e({type:"success",icon:"fa fa-check",text:t},i)},i.error=function(t,i){e({type:"error",icon:"fa fa-times",text:t,delay:i},i)},i.info=function(t,i){e({type:"info",icon:"fa fa-bell-o",text:t},i)},i.warning=function(t,i){e({type:"warning",icon:"fa fa-exclamation",text:t},i)},i.custom=function(t,i,n,o){e({type:t,icon:n,text:i},o)},i}]).directive("ngAtomicNotify",["$compile","$timeout",function(t,$timeout){var i=function($scope,i,n){var e='<div class="atomic-notify"><div class="atomic-notify-item" ng-repeat="item in items" ng-class="discoverClass(item)"><div class="icon" ng-if="item.icon"><i ng-class="item.icon"></i></div><div class="body"><p>{{item.text}}</p></div><button type="button" class="close" ng-click="dismiss(item)">&times;</button></div></div>';angular.isString(n.customTemplate)&&($scope.templateUrl=n.customTemplate,e='<ng-include src="templateUrl" />'),i.html(e),t(i.contents())($scope)},n=function($scope){$scope.items=[],$scope.addItem=function(t,i){$scope.items.push(t),i>0&&$timeout(function(){$scope.dismiss(t)},i)},$scope.dismiss=function(t){var i=$scope.items.indexOf(t);$scope.items.splice(i,1)},$scope.discoverClass=function(t){return"atomic-notify-"+t.type}};return{scope:{},restrict:"E",link:i,controller:["$scope",n]}}]);